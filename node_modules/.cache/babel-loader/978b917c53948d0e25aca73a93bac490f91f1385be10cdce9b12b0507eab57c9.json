{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects_2024\\\\rbac-ui\\\\src\\\\components\\\\roles\\\\PermissionMatrix.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AVAILABLE_PERMISSIONS = [{\n  id: 'read_users',\n  label: 'Read Users'\n}, {\n  id: 'write_users',\n  label: 'Write Users'\n}, {\n  id: 'delete_users',\n  label: 'Delete Users'\n}, {\n  id: 'read_roles',\n  label: 'Read Roles'\n}, {\n  id: 'write_roles',\n  label: 'Write Roles'\n}, {\n  id: 'delete_roles',\n  label: 'Delete Roles'\n}];\nconst PermissionMatrix = ({\n  selectedPermissions,\n  onChange\n}) => {\n  const handleToggle = permissionId => {\n    const newPermissions = selectedPermissions.includes(permissionId) ? selectedPermissions.filter(id => id !== permissionId) : [...selectedPermissions, permissionId];\n    onChange(newPermissions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-2 gap-4\",\n    children: AVAILABLE_PERMISSIONS.map(permission => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: permission.id,\n        checked: selectedPermissions.includes(permission.id),\n        onChange: () => handleToggle(permission.id),\n        className: \"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: permission.id,\n        className: \"ml-2 text-sm text-gray-700\",\n        children: permission.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, permission.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = PermissionMatrix;\nexport default PermissionMatrix;\nvar _c;\n$RefreshReg$(_c, \"PermissionMatrix\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AVAILABLE_PERMISSIONS","id","label","PermissionMatrix","selectedPermissions","onChange","handleToggle","permissionId","newPermissions","includes","filter","className","children","map","permission","type","checked","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["D:/Projects_2024/rbac-ui/src/components/roles/PermissionMatrix.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst AVAILABLE_PERMISSIONS = [\r\n  { id: 'read_users', label: 'Read Users' },\r\n  { id: 'write_users', label: 'Write Users' },\r\n  { id: 'delete_users', label: 'Delete Users' },\r\n  { id: 'read_roles', label: 'Read Roles' },\r\n  { id: 'write_roles', label: 'Write Roles' },\r\n  { id: 'delete_roles', label: 'Delete Roles' },\r\n];\r\n\r\nconst PermissionMatrix = ({ selectedPermissions, onChange }) => {\r\n  const handleToggle = (permissionId) => {\r\n    const newPermissions = selectedPermissions.includes(permissionId)\r\n      ? selectedPermissions.filter(id => id !== permissionId)\r\n      : [...selectedPermissions, permissionId];\r\n    onChange(newPermissions);\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      {AVAILABLE_PERMISSIONS.map((permission) => (\r\n        <div key={permission.id} className=\"flex items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id={permission.id}\r\n            checked={selectedPermissions.includes(permission.id)}\r\n            onChange={() => handleToggle(permission.id)}\r\n            className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n          />\r\n          <label htmlFor={permission.id} className=\"ml-2 text-sm text-gray-700\">\r\n            {permission.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PermissionMatrix;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,qBAAqB,GAAG,CAC5B;EAAEC,EAAE,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,EACzC;EAAED,EAAE,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAc,CAAC,EAC3C;EAAED,EAAE,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAe,CAAC,EAC7C;EAAED,EAAE,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAa,CAAC,EACzC;EAAED,EAAE,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAc,CAAC,EAC3C;EAAED,EAAE,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAe,CAAC,CAC9C;AAED,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,mBAAmB;EAAEC;AAAS,CAAC,KAAK;EAC9D,MAAMC,YAAY,GAAIC,YAAY,IAAK;IACrC,MAAMC,cAAc,GAAGJ,mBAAmB,CAACK,QAAQ,CAACF,YAAY,CAAC,GAC7DH,mBAAmB,CAACM,MAAM,CAACT,EAAE,IAAIA,EAAE,KAAKM,YAAY,CAAC,GACrD,CAAC,GAAGH,mBAAmB,EAAEG,YAAY,CAAC;IAC1CF,QAAQ,CAACG,cAAc,CAAC;EAC1B,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpCZ,qBAAqB,CAACa,GAAG,CAAEC,UAAU,iBACpCf,OAAA;MAAyBY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBACpDb,OAAA;QACEgB,IAAI,EAAC,UAAU;QACfd,EAAE,EAAEa,UAAU,CAACb,EAAG;QAClBe,OAAO,EAAEZ,mBAAmB,CAACK,QAAQ,CAACK,UAAU,CAACb,EAAE,CAAE;QACrDI,QAAQ,EAAEA,CAAA,KAAMC,YAAY,CAACQ,UAAU,CAACb,EAAE,CAAE;QAC5CU,SAAS,EAAC;MAAmE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eACFrB,OAAA;QAAOsB,OAAO,EAAEP,UAAU,CAACb,EAAG;QAACU,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAClEE,UAAU,CAACZ;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA,GAVAN,UAAU,CAACb,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWlB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACE,EAAA,GA1BInB,gBAAgB;AA4BtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}